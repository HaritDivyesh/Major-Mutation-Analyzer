<?xml version="1.0"?>
<!--
 Copyright (c) 2005, DoodleProject
 All rights reserved.
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:
 
 Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.
 
 Redistributions in binary form must reproduce the above copyright
 notice, this list of conditions and the following disclaimer in
 the documentation and/or other materials provided with the
 distribution.
 
 Neither the name of DoodleProject nor the names of its contributors
 may be used to endorse or promote products derived from this
 software without specific prior written permission.
 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
 TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
 THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 SUCH DAMAGE.
-->
<!-- $Revision: 1.1 $ $Date: 2006/01/06 21:52:43 $ -->
<document>
  <properties>
    <title>User Guide :: False Position Root Finder</title>
  </properties>
  <body>
    <section name="False Position Root Finder">
      <p>
        The <a target="_blank" href="../../apidocs/net/sf/doodleproject/numerics4j/root/FalsePositionRootFinder.html">net.sf.doodleproject.numerics4j.root.FalsePositionRootFinder</a>
        class provides an implementation of the
        <a target="_blank" href="http://mathworld.wolfram.com/MethodofFalsePosition.html">false position method</a>.
        The false position method is more numerically stable than its cousin algorithm, the <a href="secantrootfinder.html">secant method</a>,
        as the false position method maintains a bracketted root at all times.
        Thus, the false position is guaranteed to converge given a bracketting
        interval but, no such guaranteed is granted with the secant method.
      </p>
      <p>
        Finding roots using the false position method involves creating a
        <code>FalsePositionRootFinder</code> object for a particular
        <a target="_blank" href="../../apidocs/net/sf/doodleproject/numerics4j/function/Function.html">net.sf.doodleproject.numerics4j.function.Function</a>
        object.  Once, the root finder is created, roots can be evaluated
        by calling the <code>findRoot</code> method providing a bracketting
        interval.  Here is an example of finding roots for sine:
        <source>Function sine = new Function() {
    public double evaluate(double x) {
        return Math.sin(x);
    }
};

FalsePositionRootFinder finder = new FalsePositionRootFinder(sine);

// find the root around 3 and 4.
double pi = finder.findRoot(3.0, 4.0);

// find the root around -1 and 1.
double zero = finder.findRoot(-1.0, 1.0);</source>
      </p>
    </section>
  </body>
</document>